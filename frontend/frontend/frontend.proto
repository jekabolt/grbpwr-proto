syntax = "proto3";

package frontend;

import "common/filter.proto";
import "common/hero.proto";
import "common/order.proto";
import "common/product.proto";
import "google/api/annotations.proto";
import "google/type/decimal.proto";

option go_package = "github.com/jekabolt/grbpwr-products-manager/proto/frontend;frontend";

service FrontendService {
  // Get hero information
  rpc GetHero(GetHeroRequest) returns (GetHeroResponse) {
    option (google.api.http) = {get: "/api/frontend/hero"};
  }

  // Get product brand and name
  rpc GetProductByName(GetProductByNameRequest) returns (GetProductByNameResponse) {
    option (google.api.http) = {get: "/api/frontend/product/{name}"};
  }

  // Get paged products
  rpc GetProductsPaged(GetProductsPagedRequest) returns (GetProductsPagedResponse) {
    option (google.api.http) = {get: "/api/frontend/products/paged"};
  }

  // Submit an order
  rpc SubmitOrder(SubmitOrderRequest) returns (SubmitOrderResponse) {
    option (google.api.http) = {
      post: "/api/frontend/order/new"
      body: "*"
    };
  }

  // ApplyPromoCode applies promo code on selected order id
  rpc ApplyPromoCode(ApplyPromoCodeRequest) returns (ApplyPromoCodeResponse) {
    option (google.api.http) = {
      post: "/api/frontend/order/promo/apply"
      body: "*"
    };
  }

  // Update order items
  rpc UpdateOrderItems(UpdateOrderItemsRequest) returns (UpdateOrderItemsResponse) {
    option (google.api.http) = {
      post: "/api/frontend/order/update/items"
      body: "*"
    };
  }

  // Subscribe to the newsletter
  rpc SubscribeNewsletter(SubscribeNewsletterRequest) returns (SubscribeNewsletterResponse) {
    option (google.api.http) = {
      post: "/api/frontend/newsletter/subscribe"
      body: "*"
    };
  }

  // Unsubscribe from the newsletter
  rpc UnsubscribeNewsletter(UnsubscribeNewsletterRequest) returns (UnsubscribeNewsletterResponse) {
    option (google.api.http) = {
      post: "/api/frontend/newsletter/unsubscribe"
      body: "*"
    };
  }
}

message GetHeroRequest {}
message GetHeroResponse {
  common.HeroFull hero = 1;
}

message GetProductByNameRequest {
  // Product name
  string name = 1;
}

message GetProductByNameResponse {
  common.ProductFull product = 1;
}

message GetProductsPagedRequest {
  int32 limit = 1;
  int32 offset = 2;
  repeated common.SortFactor sort_factors = 3;
  common.OrderFactor order_factor = 4;
  common.FilterConditions filter_conditions = 5;
}

message GetProductsPagedResponse {
  repeated common.Product products = 1;
}

message SubmitOrderRequest {
  common.OrderNew order = 1;
}

message SubmitOrderResponse {
  common.Order order = 1;
}

message ApplyPromoCodeRequest {
  int32 order_id = 1;
  string promo_code = 2;
}

message ApplyPromoCodeResponse {
  google.type.Decimal total = 1;
}

message UpdateOrderItemsRequest {
  int32 order_id = 1;
  repeated common.OrderItemInsert items = 2;
}

message UpdateOrderItemsResponse {
  google.type.Decimal total = 1;
}

message SubscribeNewsletterRequest {
  string email = 1;
  string name = 2;
}

message SubscribeNewsletterResponse {}

message UnsubscribeNewsletterRequest {
  string email = 1;
}

message UnsubscribeNewsletterResponse {}
